name: 'oci-fn-build'
permissions:
  contents: read
on:
  # Add Trigger for push or pull request, if needed
  workflow_dispatch:
    inputs:
      OCI_FN_COMPARTMENT:
        description: Function compartment
        default: ocid1.compartment.oc1..aaaaaaaagpgm5kspbeahx2tnftgnvcz5l7crg3yyskdi7hexp63crnro46gq

jobs:
  # This workflow contains a single job called "build"
  Build:
      # The type of runner that the job will run on
    runs-on: ubuntu-latest
     # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
    # Runs a set of commands using the runners shell
      - name: 'Write Config & Key Files'
        run: |
          mkdir ~/.oci
          echo "[DEFAULT]" >> ~/.oci/config
          echo "user=${{ secrets.OCI_CLI_USER }}" >> ~/.oci/config
          echo "fingerprint=${{ secrets.OCI_CLI_FINGERPRINT }}" >> ~/.oci/config
          echo "tenancy=${{ secrets.OCI_CLI_TENANCY }}" >> ~/.oci/config
          echo "region=${{ vars.OCI_CLI_REGION }}" >> ~/.oci/config         
          echo "${{ secrets.OCI_CLI_KEY_CONTENT }}" >> ~/.oci/key.pem
          echo "key_file=~/.oci/key.pem" >> ~/.oci/config    

      - name: 'Install OCI CLI'
        run: |
          curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
          chmod +x install.sh
          ./install.sh --accept-all-defaults          
          export PATH=$PATH:/home/runner/bin
          exec -l $SHELL

      - name: 'Fix Config File Permissions'
        run: |
          export PATH=$PATH:/home/runner/bin
          oci setup repair-file-permissions --file ~/.oci/key.pem
          oci setup repair-file-permissions --file ~/.oci/config

      - name: 'Install Fn CLI'
        run: |
          curl -LSs https://raw.githubusercontent.com/fnproject/cli/master/install | sh

      - name: 'Docker login'
        run: docker login -u "${{ vars.OCI_FN_USER_NAME }}" -p "${{ secrets.OCI_CLI_AUTH_TOKEN }}" "${{ vars.OCI_FN_OCIR }}"

      - name: 'Setting up Fn context'
        run: |
          fn create context ${{ vars.OCI_TENANCY_NAME }} --provider oracle
          fn use context ${{ vars.OCI_TENANCY_NAME }}
          fn update context registry ${{ vars.OCI_FN_REGISTRY }}
          fn update context oracle.compartment-id ${{ inputs.OCI_FN_COMPARTMENT }}
          fn update context api-url ${{ vars.OCI_FN_API_URL }}

      - name: 'Build Image for OCI Function'
        run: fn build --verbose

      - name: 'Push image to OCI Registry'
        run: fn push --verbose
