name: "oci-fn-deploy"
permissions:
  contents: read
on:
  # Add Trigger for push or pull request, if needed

  workflow_dispatch:
    inputs:
      OCI_FN_APP:
        description: "Function app name"
        default: dip-str
      OCI_FN_COMPARTMENT:
        description: "Function compartment"
        default: ocid1.compartment.oc1..aaaaaaaagpgm5kspbeahx2tnftgnvcz5l7crg3yyskdi7hexp63crnro46gq
      OCI_FN_NAME:
        description: "Function Name"
        default: oci-logs-stream
      OCI_FN_IMAGE:
        description: "OCIR Image to use for Function"
        default: bom.ocir.io/<imagepath-oci:0.0.2>
      WORKFLOW_TYPE:
        description: "Workflow Type for create or update function"
        type: choice
        options:
          - create
          - update
jobs:
  # This workflow contains a single job called "Deploy"
  Deploy:
    runs-on:
      ubuntu-latest

      # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

        # Runs a set of commands using the runners shell
      - name: "Write Config & Key Files"
        run: |
          mkdir ~/.oci
          echo "[DEFAULT]" >> ~/.oci/config
          echo "user=${{ secrets.OCI_CLI_USER }}" >> ~/.oci/config
          echo "fingerprint=${{ secrets.OCI_CLI_FINGERPRINT }}" >> ~/.oci/config
          echo "tenancy=${{ secrets.OCI_CLI_TENANCY }}" >> ~/.oci/config
          echo "region=${{ secrets.OCI_CLI_REGION }}" >> ~/.oci/config         
          echo "${{ secrets.OCI_CLI_KEY_CONTENT }}" >> ~/.oci/key.pem
          echo "key_file=~/.oci/key.pem" >> ~/.oci/config

      - name: "Install OCI CLI"
        run: |
          curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
          chmod +x install.sh
          ./install.sh --accept-all-defaults          
          export PATH=$PATH:/home/runner/bin
          exec -l $SHELL

      - name: "Fix Config File Permissions"
        run: |
          export PATH=$PATH:/home/runner/bin
          oci setup repair-file-permissions --file ~/.oci/key.pem
          oci setup repair-file-permissions --file ~/.oci/config

      - name: "Install Fn CLI"
        run: |
          curl -LSs https://raw.githubusercontent.com/fnproject/cli/master/install | sh

      - name: "Setting up Fn context"
        run: |
          fn create context "${{ vars.OCI_TENANCY_NAME }}" --provider oracle
          fn use context "${{ vars.OCI_TENANCY_NAME }}"
          fn update context registry "${{ vars.OCI_FN_REGISTRY }}"
          fn update context oracle.compartment-id "${{ inputs.OCI_FN_COMPARTMENT }}"
          fn update context api-url "${{ vars.OCI_FN_API_URL }}"

      - name: "Create or Update OCI Function"
        run: |
          fn ${{ inputs.WORKFLOW_TYPE }} function "${{ inputs.OCI_FN_APP }}" "${{ inputs.OCI_FN_NAME }}" "${{ inputs.OCI_FN_IMAGE }}"
